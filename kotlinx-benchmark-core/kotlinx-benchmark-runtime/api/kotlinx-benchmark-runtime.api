public final class kotlinx/benchmark/BenchmarkConfiguration {
	public static final field Companion Lkotlinx/benchmark/BenchmarkConfiguration$Companion;
	public synthetic fun <init> (IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/TimeUnit;Lorg/openjdk/jmh/annotations/Mode;Ljava/util/Map;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Lkotlinx/benchmark/RunnerConfiguration;Lkotlinx/benchmark/SuiteDescriptor;)V
	public final fun getAdvanced ()Ljava/util/Map;
	public final fun getIterationTime ()J
	public final fun getIterationTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getIterations ()I
	public final fun getMode ()Lorg/openjdk/jmh/annotations/Mode;
	public final fun getOutputTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getWarmups ()I
	public fun toString ()Ljava/lang/String;
}

public final class kotlinx/benchmark/BenchmarkConfiguration$Companion {
	public final fun parse (Ljava/lang/String;)Lkotlinx/benchmark/BenchmarkConfiguration;
}

public abstract class kotlinx/benchmark/BenchmarkDescriptor {
	public fun <init> (Ljava/lang/String;Lkotlinx/benchmark/SuiteDescriptor;Lorg/openjdk/jmh/infra/Blackhole;)V
	public final fun getBlackhole ()Lorg/openjdk/jmh/infra/Blackhole;
	public final fun getName ()Ljava/lang/String;
	public final fun getSuite ()Lkotlinx/benchmark/SuiteDescriptor;
}

public class kotlinx/benchmark/BenchmarkDescriptorWithBlackholeParameter : kotlinx/benchmark/BenchmarkDescriptor {
	public fun <init> (Ljava/lang/String;Lkotlinx/benchmark/SuiteDescriptor;Lorg/openjdk/jmh/infra/Blackhole;Lkotlin/jvm/functions/Function2;)V
	public final fun getFunction ()Lkotlin/jvm/functions/Function2;
}

public class kotlinx/benchmark/BenchmarkDescriptorWithNoBlackholeParameter : kotlinx/benchmark/BenchmarkDescriptor {
	public fun <init> (Ljava/lang/String;Lkotlinx/benchmark/SuiteDescriptor;Lorg/openjdk/jmh/infra/Blackhole;Lkotlin/jvm/functions/Function1;)V
	public final fun getFunction ()Lkotlin/jvm/functions/Function1;
}

public abstract class kotlinx/benchmark/BenchmarkProgress {
	public static final field Companion Lkotlinx/benchmark/BenchmarkProgress$Companion;
	public fun <init> ()V
	public abstract fun endBenchmark (Ljava/lang/String;Ljava/lang/String;Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;Ljava/lang/String;)V
	public abstract fun endBenchmarkException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun endSuite (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun output (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun startBenchmark (Ljava/lang/String;Ljava/lang/String;)V
	public abstract fun startSuite (Ljava/lang/String;)V
}

public final class kotlinx/benchmark/BenchmarkProgress$Companion {
	public final fun create (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Lkotlinx/benchmark/BenchmarkProgress;
	public static synthetic fun create$default (Lkotlinx/benchmark/BenchmarkProgress$Companion;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILjava/lang/Object;)Lkotlinx/benchmark/BenchmarkProgress;
}

public final class kotlinx/benchmark/BenchmarkProgress$FinishStatus : java/lang/Enum {
	public static final field Failure Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
	public static final field Success Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
	public static fun values ()[Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
}

public abstract class kotlinx/benchmark/BenchmarkReportFormatter {
	public static final field Companion Lkotlinx/benchmark/BenchmarkReportFormatter$Companion;
	public abstract fun format (Ljava/util/Collection;)Ljava/lang/String;
}

public final class kotlinx/benchmark/BenchmarkReportFormatter$Companion {
	public final fun create (Ljava/lang/String;)Lkotlinx/benchmark/BenchmarkReportFormatter;
}

public final class kotlinx/benchmark/CommonBenchmarkAnnotationsKt {
	public static final fun toMode (Ljava/lang/String;)Lorg/openjdk/jmh/annotations/Mode;
	public static final fun toMultiplier (Ljava/util/concurrent/TimeUnit;)J
	public static final fun toSecondsMultiplier (Ljava/util/concurrent/TimeUnit;)D
	public static final fun toText (Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
	public static final fun toText (Lorg/openjdk/jmh/annotations/Mode;)Ljava/lang/String;
}

public class kotlinx/benchmark/CommonBlackhole {
	public fun <init> ()V
	public final fun consume (B)V
	public final fun consume (C)V
	public final fun consume (D)V
	public final fun consume (F)V
	public final fun consume (I)V
	public final fun consume (J)V
	public final fun consume (Ljava/lang/Object;)V
	public final fun consume (S)V
	public final fun consume (Z)V
	public final fun flushMe ()V
}

public abstract class kotlinx/benchmark/CommonSuiteExecutor : kotlinx/benchmark/SuiteExecutor {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	protected fun createIterationMeasurer (Ljava/lang/Object;Lkotlinx/benchmark/BenchmarkDescriptor;Lkotlinx/benchmark/BenchmarkConfiguration;I)Lkotlin/jvm/functions/Function0;
	public fun run (Lkotlinx/benchmark/RunnerConfiguration;Ljava/util/List;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
}

public final class kotlinx/benchmark/ConsoleBenchmarkProgress : kotlinx/benchmark/BenchmarkProgress {
	public fun <init> ()V
	public fun endBenchmark (Ljava/lang/String;Ljava/lang/String;Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;Ljava/lang/String;)V
	public fun endBenchmarkException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun endSuite (Ljava/lang/String;Ljava/lang/String;)V
	public fun output (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun startBenchmark (Ljava/lang/String;Ljava/lang/String;)V
	public fun startSuite (Ljava/lang/String;)V
}

public final class kotlinx/benchmark/DefaultDescriptorParameters {
	public static final field INSTANCE Lkotlinx/benchmark/DefaultDescriptorParameters;
	public final fun getIterationTime ()Lkotlinx/benchmark/IterationTime;
	public final fun getIterations ()I
	public final fun getMode ()Lorg/openjdk/jmh/annotations/Mode;
	public final fun getOutputTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getWarmups ()I
}

public class kotlinx/benchmark/IntelliJBenchmarkProgress : kotlinx/benchmark/BenchmarkProgress {
	public fun <init> ()V
	public fun endBenchmark (Ljava/lang/String;Ljava/lang/String;Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;Ljava/lang/String;)V
	public fun endBenchmarkException (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun endSuite (Ljava/lang/String;Ljava/lang/String;)V
	protected final fun getCurrentClass ()Ljava/lang/String;
	protected final fun getCurrentStatus ()Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
	protected final fun getSuiteStatus ()Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;
	public fun output (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	protected final fun setCurrentClass (Ljava/lang/String;)V
	protected final fun setCurrentStatus (Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;)V
	protected final fun setSuiteStatus (Lkotlinx/benchmark/BenchmarkProgress$FinishStatus;)V
	public fun startBenchmark (Ljava/lang/String;Ljava/lang/String;)V
	public fun startSuite (Ljava/lang/String;)V
}

public final class kotlinx/benchmark/IterationTime {
	public fun <init> (JLjava/util/concurrent/TimeUnit;)V
	public final fun component1 ()J
	public final fun component2 ()Ljava/util/concurrent/TimeUnit;
	public final fun copy (JLjava/util/concurrent/TimeUnit;)Lkotlinx/benchmark/IterationTime;
	public static synthetic fun copy$default (Lkotlinx/benchmark/IterationTime;JLjava/util/concurrent/TimeUnit;ILjava/lang/Object;)Lkotlinx/benchmark/IterationTime;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getValue ()J
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class kotlinx/benchmark/JvmBlackholeKt {
	public static final fun flush (Lorg/openjdk/jmh/infra/Blackhole;)V
}

public final class kotlinx/benchmark/ReportBenchmarkResult {
	public fun <init> (Lkotlinx/benchmark/BenchmarkConfiguration;Lkotlinx/benchmark/BenchmarkDescriptor;Ljava/util/Map;DDLkotlin/Pair;Ljava/util/Map;[D)V
	public final fun getBenchmark ()Lkotlinx/benchmark/BenchmarkDescriptor;
	public final fun getConfidence ()Lkotlin/Pair;
	public final fun getConfig ()Lkotlinx/benchmark/BenchmarkConfiguration;
	public final fun getError ()D
	public final fun getParams ()Ljava/util/Map;
	public final fun getPercentiles ()Ljava/util/Map;
	public final fun getScore ()D
	public final fun getValues ()[D
}

public final class kotlinx/benchmark/ReportBenchmarksStatistics {
	public static final field Companion Lkotlinx/benchmark/ReportBenchmarksStatistics$Companion;
	public fun <init> ([D)V
	public final fun getSize ()I
	public final fun getValues ()[D
	public final fun max ()D
	public final fun mean ()D
	public final fun median ()D
	public final fun min ()D
	public final fun standardDeviation ()D
	public final fun valueAt (D)D
}

public final class kotlinx/benchmark/ReportBenchmarksStatistics$Companion {
	public final fun createResult (Lkotlinx/benchmark/BenchmarkDescriptor;Ljava/util/Map;Lkotlinx/benchmark/BenchmarkConfiguration;[D)Lkotlinx/benchmark/ReportBenchmarkResult;
}

public final class kotlinx/benchmark/ReportBenchmarksStatisticsKt {
	public static final fun formatSignificant (DI)Ljava/lang/String;
	public static final fun isApproximateZero (D)Z
	public static final fun isNaNOrZero (D)Z
	public static final fun nanosToSample (DLorg/openjdk/jmh/annotations/Mode;Ljava/util/concurrent/TimeUnit;)D
	public static final fun nanosToText (DLorg/openjdk/jmh/annotations/Mode;Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
	public static final fun sampleToText (DLorg/openjdk/jmh/annotations/Mode;Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
	public static final fun unitText (Lorg/openjdk/jmh/annotations/Mode;Ljava/util/concurrent/TimeUnit;)Ljava/lang/String;
}

public final class kotlinx/benchmark/RunnerConfiguration {
	public fun <init> (Ljava/lang/String;)V
	public final fun getAdvanced ()Ljava/util/Map;
	public final fun getExclude ()Ljava/util/List;
	public final fun getInclude ()Ljava/util/List;
	public final fun getIterationTime ()Ljava/lang/Long;
	public final fun getIterationTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getIterations ()Ljava/lang/Integer;
	public final fun getMode ()Lorg/openjdk/jmh/annotations/Mode;
	public final fun getName ()Ljava/lang/String;
	public final fun getOutputTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getParams ()Ljava/util/Map;
	public final fun getReportFile ()Ljava/lang/String;
	public final fun getReportFormat ()Ljava/lang/String;
	public final fun getTraceFormat ()Ljava/lang/String;
	public final fun getWarmups ()Ljava/lang/Integer;
	public fun toString ()Ljava/lang/String;
}

public class kotlinx/benchmark/SuiteDescriptor {
	public fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/List;Ljava/util/Map;IILkotlinx/benchmark/IterationTime;Ljava/util/concurrent/TimeUnit;Lorg/openjdk/jmh/annotations/Mode;)V
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;Ljava/util/List;Ljava/util/Map;IILkotlinx/benchmark/IterationTime;Ljava/util/concurrent/TimeUnit;Lorg/openjdk/jmh/annotations/Mode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun add (Lkotlinx/benchmark/BenchmarkDescriptor;)V
	public final fun getBenchmarks ()Ljava/util/List;
	public final fun getDefaultParameters ()Ljava/util/Map;
	public final fun getFactory ()Lkotlin/jvm/functions/Function0;
	public final fun getIterationTime ()Lkotlinx/benchmark/IterationTime;
	public final fun getIterations ()I
	public final fun getMode ()Lorg/openjdk/jmh/annotations/Mode;
	public final fun getName ()Ljava/lang/String;
	public final fun getOutputTimeUnit ()Ljava/util/concurrent/TimeUnit;
	public final fun getParameters ()Ljava/util/List;
	public final fun getParametrize ()Lkotlin/jvm/functions/Function2;
	public final fun getSetup ()Lkotlin/jvm/functions/Function1;
	public final fun getTeardown ()Lkotlin/jvm/functions/Function1;
	public final fun getWarmups ()I
}

public abstract class kotlinx/benchmark/SuiteExecutor {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Lkotlin/jvm/functions/Function0;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getExecutionName ()Ljava/lang/String;
	public final fun getReporter ()Lkotlinx/benchmark/BenchmarkProgress;
	protected final fun id (Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;
	public final fun result (Lkotlinx/benchmark/ReportBenchmarkResult;)V
	public final fun run ()V
	public abstract fun run (Lkotlinx/benchmark/RunnerConfiguration;Ljava/util/List;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)V
	public final fun suite (Lkotlinx/benchmark/SuiteDescriptor;)V
}

public final class kotlinx/benchmark/SuiteExecutorKt {
	public static final fun runWithParameters (Ljava/util/List;Ljava/util/Map;Ljava/util/Map;Lkotlin/jvm/functions/Function1;)V
}

public final class kotlinx/benchmark/jvm/JmhOutputFormat : kotlinx/benchmark/jvm/PrintOutputFormat {
	public fun <init> (Lkotlinx/benchmark/BenchmarkProgress;Ljava/lang/String;)V
	public fun endBenchmark (Lorg/openjdk/jmh/results/BenchmarkResult;)V
	public fun endRun (Ljava/util/Collection;)V
	public fun iteration (Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;I)V
	public fun iterationResult (Lorg/openjdk/jmh/infra/BenchmarkParams;Lorg/openjdk/jmh/infra/IterationParams;ILorg/openjdk/jmh/results/IterationResult;)V
	public fun println (Ljava/lang/String;)V
	public fun startBenchmark (Lorg/openjdk/jmh/infra/BenchmarkParams;)V
	public fun startRun ()V
}

public final class kotlinx/benchmark/jvm/JvmBenchmarkRunnerKt {
	public static final fun main ([Ljava/lang/String;)V
}

public abstract class kotlinx/benchmark/jvm/PrintOutputFormat : org/openjdk/jmh/runner/format/OutputFormat {
	public fun <init> (Ljava/io/PrintStream;Lorg/openjdk/jmh/runner/options/VerboseMode;)V
	public synthetic fun <init> (Ljava/io/PrintStream;Lorg/openjdk/jmh/runner/options/VerboseMode;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun close ()V
	public fun flush ()V
	public fun print (Ljava/lang/String;)V
	public fun println (Ljava/lang/String;)V
	public fun verbosePrintln (Ljava/lang/String;)V
	public fun write (I)V
	public fun write ([B)V
}

